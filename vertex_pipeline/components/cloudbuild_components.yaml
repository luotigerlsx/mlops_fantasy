# Copyright 2021 Google LLC. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

steps:

  - name: "gcr.io/cloud-builders/docker"
    entrypoint: 'bash'
    args: [ "-c", "docker build -t ${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/batch-predict:$TAG_NAME --build-arg PROJECT_ID=$PROJECT_ID --build-arg _AF_REGISTRY_LOCATION=${_AF_REGISTRY_LOCATION} --build-arg _AF_REGISTRY_NAME=${_AF_REGISTRY_NAME} --cache-from ${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/component-base ." ]
    dir: 'batch_predict'
    id: 'Build component: batch-predict'

  - name: "gcr.io/cloud-builders/docker"
    entrypoint: 'bash'
    args: [ "-c", "docker build -t ${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/check-model-metrics:$TAG_NAME --build-arg PROJECT_ID=$PROJECT_ID --build-arg _AF_REGISTRY_LOCATION=${_AF_REGISTRY_LOCATION} --build-arg _AF_REGISTRY_NAME=${_AF_REGISTRY_NAME} --cache-from ${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/component-base ." ]
    dir: 'check_model_metrics'
    id: 'Build component: check-model-metrics'

  - name: "gcr.io/cloud-builders/docker"
    entrypoint: 'bash'
    args: [ "-c", "docker build -t ${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/create-endpoint:$TAG_NAME --build-arg PROJECT_ID=$PROJECT_ID --build-arg _AF_REGISTRY_LOCATION=${_AF_REGISTRY_LOCATION} --build-arg _AF_REGISTRY_NAME=${_AF_REGISTRY_NAME} --cache-from ${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/component-base ." ]
    dir: 'create_endpoint'
    id: 'Build component: create-endpoint'

  - name: "gcr.io/cloud-builders/docker"
    entrypoint: 'bash'
    args: [ "-c", "docker build -t ${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/data-preprocess:$TAG_NAME --build-arg PROJECT_ID=$PROJECT_ID --build-arg _AF_REGISTRY_LOCATION=${_AF_REGISTRY_LOCATION} --build-arg _AF_REGISTRY_NAME=${_AF_REGISTRY_NAME} --cache-from ${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/component-base ." ]
    dir: 'data_preprocess'
    id: 'Build component: data-preprocess'

  - name: "gcr.io/cloud-builders/docker"
    entrypoint: 'bash'
    args: [ "-c", "docker build -t ${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/deploy-model:$TAG_NAME --build-arg PROJECT_ID=$PROJECT_ID --build-arg _AF_REGISTRY_LOCATION=${_AF_REGISTRY_LOCATION} --build-arg _AF_REGISTRY_NAME=${_AF_REGISTRY_NAME} --cache-from ${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/component-base ." ]
    dir: 'deploy_model'
    id: 'Build component: deploy-model'

  - name: "gcr.io/cloud-builders/docker"
    entrypoint: 'bash'
    args: [ "-c", "docker build -t ${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/monitor-model:$TAG_NAME --build-arg PROJECT_ID=$PROJECT_ID --build-arg _AF_REGISTRY_LOCATION=${_AF_REGISTRY_LOCATION} --build-arg _AF_REGISTRY_NAME=${_AF_REGISTRY_NAME} --cache-from ${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/component-base ." ]
    dir: 'monitor_model'
    id: 'Build component: monitor-model'

  - name: "gcr.io/cloud-builders/docker"
    entrypoint: 'bash'
    args: [ "-c", "docker build -t ${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/train-model:$TAG_NAME --build-arg PROJECT_ID=$PROJECT_ID --build-arg _AF_REGISTRY_LOCATION=${_AF_REGISTRY_LOCATION} --build-arg _AF_REGISTRY_NAME=${_AF_REGISTRY_NAME} --cache-from ${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/component-base ." ]
    dir: 'train_model'
    id: 'Build component: train-model'

  - name: "gcr.io/cloud-builders/docker"
    entrypoint: 'bash'
    args: [ "-c", "docker build -t ${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/write-bigquery:$TAG_NAME --build-arg PROJECT_ID=$PROJECT_ID --build-arg _AF_REGISTRY_LOCATION=${_AF_REGISTRY_LOCATION} --build-arg _AF_REGISTRY_NAME=${_AF_REGISTRY_NAME} --cache-from ${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/component-base ." ]
    dir: 'write_bigquery'
    id: 'Build component: write-bigquery'


images:
  - '${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/batch-predict:$TAG_NAME'
  - '${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/check-model-metrics:$TAG_NAME'
  - '${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/create-endpoint:$TAG_NAME'
  - '${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/data-preprocess:$TAG_NAME'
  - '${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/deploy-model:$TAG_NAME'
  - '${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/monitor-model:$TAG_NAME'
  - '${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/train-model:$TAG_NAME'
  - '${_AF_REGISTRY_LOCATION}-docker.pkg.dev/$PROJECT_ID/${_AF_REGISTRY_NAME}/write-bigquery:$TAG_NAME'